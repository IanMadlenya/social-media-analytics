apply plugin: 'application'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'scala'
apply plugin: 'maven'
apply plugin: 'java'
apply plugin: 'eu.appsatori.fatjar'

applicationName = "SocialMediaAnalytics"
archivesBaseName = 'social-media-analytics'
group = "io.scalding"
version = "1.0"
mainClassName = 'io.scalding.approximations.ExamplesRunner'

ext {
    hadoopVersion = "2.5.0-cdh5.2.0"
    hadoopCoreVersion = "2.5.0-mr1-cdh5.2.0"
    scaldingVersion = "0.12.0"
    cascadingVersion = "2.5.4"
    sl4jVersion = "1.7.7"
    // Testing libraries
    specs2Version = "2.4.13"
    scalaTestVersion = "2.2.2"
}

// Repositories to download libraries from
repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url 'http://conjars.org/repo'
    }
    maven {
        url 'http://clojars.org/repo'
    }
    maven {
        url 'http://maven.twttr.com'
    }
    maven {
        url 'http://repository.cloudera.com/content/repositories/releases/'
    }
    maven {
        url 'http://dl.bintray.com/scalaz/releases'
    }
}

// Dependencies for `build`
buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath 'eu.appsatori:gradle-fatjar-plugin:0.3'
    }
}

dependencies {
    compile 'org.scala-lang:scala-library:2.10.4'

    compile group: 'com.twitter' , name: 'scalding_2.10',         version: scaldingVersion
    compile group: 'com.twitter' , name: 'scalding-args_2.10',    version: scaldingVersion
    compile group: 'com.twitter' , name: 'scalding-core_2.10',    version: scaldingVersion
    compile group: 'com.twitter' , name: 'scalding-commons_2.10', version: scaldingVersion

    compile group: 'org.apache.hadoop' , name: 'hadoop-common',   version: hadoopVersion
    compile group: 'org.apache.hadoop' , name: 'hadoop-core',     version: hadoopCoreVersion

    compile group: 'cascading' , name: 'cascading-core', 	  version: cascadingVersion
    compile group: 'cascading' , name: 'cascading-hadoop', 	  version: cascadingVersion
    compile group: 'cascading' , name: 'cascading-hadoop2-mr1',   version: cascadingVersion

    compile group: 'org.slf4j' , name: 'slf4j-api',               version: sl4jVersion
    compile group: 'org.slf4j' , name: 'slf4j-log4j12',           version: sl4jVersion

    //compile group: 'com.twitter' , name: 'chill_2.10',          version: '0.5.1'
    //compile group: 'com.twitter' , name: 'chill-algebird_2.10', version: '0.5.1'
    //compile group: 'com.twitter' , name: 'chill-bijection_2.10',version: '0.5.1'

    testCompile group: 'org.specs2', name: 'specs2_2.10',         version: specs2Version
    testCompile group: 'org.scalatest', name: 'scalatest_2.10',   version: scalaTestVersion
    testCompile group: 'cascading', name: 'cascading-platform',   version: cascadingVersion

}


// http://forums.gradle.org/gradle/topics/ant_scalac_using_target_jvm_1_5
tasks.withType(ScalaCompile) {
    scalaCompileOptions.additionalParameters = ['-target:jvm-1.6'] // Or 1.7 if you enjoy
    scalaCompileOptions.useAnt = false
}

tasks.withType(ScalaCompile) {
    configure(scalaCompileOptions.forkOptions) {
        memoryMaximumSize = '1g'
        jvmArgs = ['-XX:MaxPermSize=512m']
    }
}

task specs(dependsOn: ['testClasses'], type: JavaExec) {
    main = 'org.scalatest.tools.Runner'
    args = ['-R', 'build/classes/test', '-o']
    classpath = sourceSets.test.runtimeClasspath
}

test.dependsOn specs

fatJar {
  classifier 'hadoopJar'
  manifest {
    //attributes("Main-Class": "com/twitter/scalding/Tool")
  }
  exclude 'META-INF/*.DSA', 'META-INF/*.RSA', 'META-INF/*.SF'
}

hadoopJar.dependsOn fatJar

// Repository to upload artifacts to (nexus)
//uploadArchives {
//    repositories {
//        mavenDeployer {
//            // TO RELEASE change `snapshots` into `releases` and use a valid pom.version
//            repository(url: "http://conjars/content/repositories/snapshots") {
//                authentication(userName: nexusUser, password: nexusPassword)
//            } // Username and password come from `~/.gradle/gradle.properties`
//            pom.version = version
//            pom.artifactId = archivesBaseName
//            pom.groupId = "io.scalding"
//        }
//    }
//}

// $ gradle run 					# To run all examples
// $ gradle dependencies 				# To view dependency tree
// $ gradle test 					# To run all tests
// $ gradle clean jar hadoopJar                         # to generate 2 jars at /build/libs/ (a library) & a hadoop ready jar
