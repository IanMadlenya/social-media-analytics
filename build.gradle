apply plugin: 'application'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'scala'
apply plugin: 'maven'
apply plugin: 'java'
apply plugin: 'gradle-one-jar'

applicationName = "SocialMediaAnalytics"
mainClassName = 'io.scalding.approximations.ExamplesRunner'
group = "io.scalding"
version = "1.0"
archivesBaseName = 'impatient'


ext {
    hadoopVersion = "2.5.0-cdh5.2.0"
    hadoopCoreVersion = "2.5.0-mr1-cdh5.2.0"
    scaldingVersion = "0.12.0"
    sl4jVersion = "1.7.7"
    // Testing libraries
    specs2Version = "2.4.13"
    scalaTestVersion = "2.2.2"
}

// Repositories to download libraries from
repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url 'http://conjars.org/repo'
    }
    maven {
        url 'http://clojars.org/repo'
    }
    maven {
        url 'http://maven.twttr.com'
    }
    maven {
        url 'http://repository.cloudera.com/content/repositories/releases/'
    }
    maven {
        url 'http://dl.bintray.com/scalaz/releases'
    }
}

// Dependencies for `build`
buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath 'com.github.rholder:gradle-one-jar:1.0.4'
    }
}

dependencies {
    compile 'org.scala-lang:scala-library:2.10.4'

    compile group: 'com.twitter' , name: 'scalding-core_2.10',    version: scaldingVersion
    compile group: 'com.twitter' , name: 'scalding-commons_2.10', version: scaldingVersion

    compile group: 'org.apache.hadoop' , name: 'hadoop-common',   version: hadoopVersion
    compile group: 'org.apache.hadoop' , name: 'hadoop-core',     version: hadoopCoreVersion
    compile group: 'org.apache.hadoop' , name: 'hadoop-client',   version: hadoopVersion
    //compile group: 'com.twitter', name: 'chill_2.10', version: '0.5.1'
    //compile group: 'com.twitter', name: 'chill-algebird_2.10', version : '0.5.1'
    //compile group: 'com.twitter', name: 'chill-bijection_2.10', version : '0.5.1'

    compile group: 'org.slf4j', name: 'slf4j-api', version: sl4jVersion
    compile group: 'org.slf4j', name: 'slf4j-log4j12', version: sl4jVersion

    testCompile group: 'org.specs2', name: 'specs2_2.10', version: specs2Version
    testCompile group: 'org.scalatest', name: 'scalatest_2.10', version: scalaTestVersion

    // in case you need to add JARs from a local build
    compile fileTree( dir: 'lib', includes: ['*.jar'] )
}

// Repository to upload artifacts to (nexus)
//uploadArchives {
//    repositories {
//        mavenDeployer {
//            // TO RELEASE change `snapshots` into `releases` and use a valid pom.version
//            repository(url: "http://conjars/content/repositories/snapshots") {
//                authentication(userName: mavenUser, password: mavenPassword)
//            } // Username and password come from `~/.gradle/gradle.properties`
//            pom.version = "1.0-SNAPSHOT"
//            pom.artifactId = "scalding-approximations"
//            pom.groupId = "io.scalding"
//        }
//    }
//}

// http://forums.gradle.org/gradle/topics/ant_scalac_using_target_jvm_1_5
tasks.withType(ScalaCompile) {
    scalaCompileOptions.additionalParameters = ['-target:jvm-1.6']
    scalaCompileOptions.useAnt = false
}

tasks.withType(ScalaCompile) {
    configure(scalaCompileOptions.forkOptions) {
        memoryMaximumSize = '1g'
        jvmArgs = ['-XX:MaxPermSize=512m']
    }
}

task spec(dependsOn: ['testClasses'], type: JavaExec) {
    main = 'org.scalatest.tools.Runner'
    args = ['-R', 'build/classes/test', '-o']
    classpath = sourceSets.test.runtimeClasspath
}

task hadoopJar(type: OneJar) {
//    mainClass = 'io.scalding.approximations.ExamplesRunner'
    mainClass = 'com.twitter.scalding.Tool'
    archiveName = 'scalding-approximations.jar'
}

// $ gradle run # To run all examples
// $ gradle dependencies # To view dependency tree
// $ gradle spec # To run all tests
// $ gradle clean hadoopJar # to generate 2 jars at /build/libs/ (a library) & a hadoop ready jar


// Emulate Maven shade plugin with a fat jar.
// http://docs.codehaus.org/display/GRADLE/Cookbook#Cookbook-Creatingafatjar
//jar {
//    from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
//}
// Provided configuration as suggested in GRADLE-784
//sourceSets {
//    main {
//        compileClasspath
//    }
//}
jar {
    description = "Assembles a Hadoop-ready JAR file"
    doFirst {
        into( 'lib' ) {
            from configurations.compile
        }
    }

    manifest {
        attributes( "Main-Class": "com.twitter.scalding.Tool" )
    }
}